{"ast":null,"code":"import _toConsumableArray from\"/home/admi/work/cra/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/admi/work/cra/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./App';import{createStore}from'redux';// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'ADD' :\n//       state = state + action.payload\n//       break\n//     case 'SUB' :\n//       state = state - action.payload\n//       break\n//     default: console.log('Nothing')\n//   }\n//   return state\n// }\n// const store = createStore(reducer, 100)\n// store.subscribe(() => {\n//   console.log('Store updated', store.getState())\n// })\n// store.dispatch({\n//   type: 'ADD',\n//   payload: 11\n// })\n// store.dispatch({\n//   type: 'SUB',\n//   payload: 11\n// })\n// state as an object\nvar initialState={val:100,array:[]};var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'ADD'://   state.val += action.payload\n//   break\nreturn _objectSpread({},state,{val:state.val+action.payload});case'SUB':return _objectSpread({},state,{array:[].concat(_toConsumableArray(state.array),[action.payload])});//   break\ndefault:console.log('Nothing');}//   return state\n};var store=createStore(reducer);store.subscribe(function(){console.log('Store updated',store.getState());});store.dispatch({type:'ADD',payload:11});store.dispatch({type:'ADD',payload:1});store.dispatch({type:'SUB',payload:11});store.dispatch({type:'SUB',payload:1});// ReactDOM.render(<App />, document.getElementById('root'))","map":{"version":3,"sources":["/home/admi/work/cra/src/index.js"],"names":["React","ReactDOM","App","createStore","initialState","val","array","reducer","state","action","type","payload","console","log","store","subscribe","getState","dispatch"],"mappings":"mNAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CAEA,OAASC,WAAT,KAA4B,OAA5B,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,GAAG,CAAE,GADc,CAEnBC,KAAK,CAAE,EAFY,CAArB,CAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBJ,YAAyB,IAAXK,CAAAA,MAAW,2CAChD,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,KAAL,CACA;AACA;AACE,wBAAYF,KAAZ,EAAmBH,GAAG,CAAEG,KAAK,CAACH,GAAN,CAAYI,MAAM,CAACE,OAA3C,GACF,IAAK,KAAL,CACE,wBAAYH,KAAZ,EAAmBF,KAAK,8BAAME,KAAK,CAACF,KAAZ,GAAmBG,MAAM,CAACE,OAA1B,EAAxB,GACA;AACF,QAASC,OAAO,CAACC,GAAR,CAAY,SAAZ,EARX,CAUF;AACC,CAZD,CAcA,GAAMC,CAAAA,KAAK,CAAGX,WAAW,CAACI,OAAD,CAAzB,CAEAO,KAAK,CAACC,SAAN,CAAgB,UAAM,CACpBH,OAAO,CAACC,GAAR,CAAY,eAAZ,CAA6BC,KAAK,CAACE,QAAN,EAA7B,EACD,CAFD,EAIAF,KAAK,CAACG,QAAN,CAAe,CACbP,IAAI,CAAE,KADO,CAEbC,OAAO,CAAE,EAFI,CAAf,EAKAG,KAAK,CAACG,QAAN,CAAe,CACbP,IAAI,CAAE,KADO,CAEbC,OAAO,CAAE,CAFI,CAAf,EAKAG,KAAK,CAACG,QAAN,CAAe,CACbP,IAAI,CAAE,KADO,CAEbC,OAAO,CAAE,EAFI,CAAf,EAIAG,KAAK,CAACG,QAAN,CAAe,CACbP,IAAI,CAAE,KADO,CAEbC,OAAO,CAAE,CAFI,CAAf,EAKA","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { createStore } from 'redux'\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'ADD' :\n//       state = state + action.payload\n//       break\n//     case 'SUB' :\n//       state = state - action.payload\n//       break\n//     default: console.log('Nothing')\n//   }\n//   return state\n// }\n\n// const store = createStore(reducer, 100)\n\n// store.subscribe(() => {\n//   console.log('Store updated', store.getState())\n// })\n\n// store.dispatch({\n//   type: 'ADD',\n//   payload: 11\n// })\n\n// store.dispatch({\n//   type: 'SUB',\n//   payload: 11\n// })\n\n// state as an object\n\nconst initialState = {\n  val: 100,\n  array: []\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD' :\n    //   state.val += action.payload\n    //   break\n      return { ...state, val: state.val + action.payload }\n    case 'SUB' :\n      return { ...state, array: [...state.array, action.payload] }\n      //   break\n    default: console.log('Nothing')\n  }\n//   return state\n}\n\nconst store = createStore(reducer)\n\nstore.subscribe(() => {\n  console.log('Store updated', store.getState())\n})\n\nstore.dispatch({\n  type: 'ADD',\n  payload: 11\n})\n\nstore.dispatch({\n  type: 'ADD',\n  payload: 1\n})\n\nstore.dispatch({\n  type: 'SUB',\n  payload: 11\n})\nstore.dispatch({\n  type: 'SUB',\n  payload: 1\n})\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}