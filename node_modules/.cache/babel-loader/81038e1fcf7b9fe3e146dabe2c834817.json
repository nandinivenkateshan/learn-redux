{"ast":null,"code":"import _objectSpread from \"/home/admi/work/cra/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore, combineReducers, applyMiddleware } from 'redux'; // Multiple reducers\n\nconst mathReducer = (state = {\n  val: 100,\n  array: []\n}, action) => {\n  switch (action.type) {\n    case 'ADD':\n      state = _objectSpread({}, state, {\n        val: state.val + action.payload\n      });\n      break;\n\n    case 'SUB':\n      state = _objectSpread({}, state, {\n        array: [...state.array, action.payload]\n      });\n  }\n\n  return state;\n};\n\nconst userReducer = (state = {\n  name: 'Nandini',\n  age: 24\n}, action) => {\n  switch (action.type) {\n    case 'SET_NAME':\n      state = _objectSpread({}, state, {\n        name: action.payload\n      });\n      break;\n\n    case 'SET_AGE':\n      state = _objectSpread({}, state, {\n        age: action.payload\n      });\n  }\n\n  return state;\n}; // Middleware \n\n\nconst myLogger = store => next => action => {\n  console;\n};\n\nconst store = createStore(combineReducers({\n  user: userReducer,\n  maths: mathReducer\n}), {}, applyMiddleware());\nstore.subscribe(() => {\n  console.log('Store updated', store.getState());\n});\nstore.dispatch({\n  type: 'SET_AGE',\n  payload: 11\n});\nstore.dispatch({\n  type: 'ADD',\n  payload: 11\n});\nstore.dispatch({\n  type: 'SUB',\n  payload: 1\n});\nstore.dispatch({\n  type: 'SET_NAME',\n  payload: 'Nandini Venkateshan'\n}); // ReactDOM.render(<App />, document.getElementById('root'))","map":{"version":3,"sources":["/home/admi/work/cra/src/index.js"],"names":["React","ReactDOM","App","createStore","combineReducers","applyMiddleware","mathReducer","state","val","array","action","type","payload","userReducer","name","age","myLogger","store","next","console","user","maths","subscribe","log","getState","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D,C,CAEA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAC3BC,EAAAA,GAAG,EAAE,GADsB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAAT,EAGjBC,MAHiB,KAGN;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACEJ,MAAAA,KAAK,qBAAQA,KAAR;AAAeC,QAAAA,GAAG,EAAED,KAAK,CAACC,GAAN,GAAYE,MAAM,CAACE;AAAvC,QAAL;AACA;;AACF,SAAK,KAAL;AACEL,MAAAA,KAAK,qBAAQA,KAAR;AAAeE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAtB,QAAL;AALJ;;AAOA,SAAOL,KAAP;AACD,CAZD;;AAcA,MAAMM,WAAW,GAAG,CAACN,KAAK,GAAG;AAC3BO,EAAAA,IAAI,EAAE,SADqB;AAE3BC,EAAAA,GAAG,EAAE;AAFsB,CAAT,EAGjBL,MAHiB,KAGN;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEJ,MAAAA,KAAK,qBAAQA,KAAR;AAAeO,QAAAA,IAAI,EAAEJ,MAAM,CAACE;AAA5B,QAAL;AACA;;AACF,SAAK,SAAL;AACEL,MAAAA,KAAK,qBAAQA,KAAR;AAAeQ,QAAAA,GAAG,EAAEL,MAAM,CAACE;AAA3B,QAAL;AALJ;;AAOA,SAAOL,KAAP;AACD,CAZD,C,CAaA;;;AAEA,MAAMS,QAAQ,GAAIC,KAAD,IAAYC,IAAD,IAAWR,MAAD,IAAY;AAChDS,EAAAA,OAAO;AACR,CAFD;;AAIA,MAAMF,KAAK,GAAGd,WAAW,CAACC,eAAe,CAAC;AAAEgB,EAAAA,IAAI,EAAEP,WAAR;AAAqBQ,EAAAA,KAAK,EAAEf;AAA5B,CAAD,CAAhB,EAA6D,EAA7D,EACzBD,eAAe,EADU,CAAzB;AAGAY,KAAK,CAACK,SAAN,CAAgB,MAAM;AACpBH,EAAAA,OAAO,CAACI,GAAR,CAAY,eAAZ,EAA6BN,KAAK,CAACO,QAAN,EAA7B;AACD,CAFD;AAIAP,KAAK,CAACQ,QAAN,CAAe;AACbd,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAIAK,KAAK,CAACQ,QAAN,CAAe;AACbd,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAK,KAAK,CAACQ,QAAN,CAAe;AACbd,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAK,KAAK,CAACQ,QAAN,CAAe;AACbd,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf,E,CAKA","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\n\n// Multiple reducers\n\nconst mathReducer = (state = {\n  val: 100,\n  array: []\n}, action) => {\n  switch (action.type) {\n    case 'ADD' :\n      state = { ...state, val: state.val + action.payload }\n      break\n    case 'SUB' :\n      state = { ...state, array: [...state.array, action.payload] }\n  }\n  return state\n}\n\nconst userReducer = (state = {\n  name: 'Nandini',\n  age: 24\n}, action) => {\n  switch (action.type) {\n    case 'SET_NAME' :\n      state = { ...state, name: action.payload }\n      break\n    case 'SET_AGE' :\n      state = { ...state, age: action.payload }\n  }\n  return state\n}\n// Middleware \n\nconst myLogger = (store) => (next) => (action) => {\n  console\n}\n\nconst store = createStore(combineReducers({ user: userReducer, maths: mathReducer }), {},\napplyMiddleware())\n\nstore.subscribe(() => {\n  console.log('Store updated', store.getState())\n})\n\nstore.dispatch({\n  type: 'SET_AGE',\n  payload: 11\n})\nstore.dispatch({\n  type: 'ADD',\n  payload: 11\n})\n\nstore.dispatch({\n  type: 'SUB',\n  payload: 1\n})\n\nstore.dispatch({\n  type: 'SET_NAME',\n  payload: 'Nandini Venkateshan'\n})\n\n// ReactDOM.render(<App />, document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}