{"ast":null,"code":"import _objectSpread from \"/home/admi/work/cra/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/admi/work/cra/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './app/container/App';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { Provider } from 'react-redux';\n\nconst mathReducer = (state = {\n  val: 100,\n  array: []\n}, action) => {\n  switch (action.type) {\n    case 'ADD':\n      state = _objectSpread({}, state, {\n        val: state.val + action.payload\n      });\n      break;\n\n    case 'SUB':\n      state = _objectSpread({}, state, {\n        array: [...state.array, action.payload]\n      });\n  }\n\n  return state;\n};\n\nconst userReducer = (state = {\n  name: 'Nandini',\n  age: 24\n}, action) => {\n  switch (action.type) {\n    case 'SET_NAME':\n      state = _objectSpread({}, state, {\n        name: action.payload\n      });\n      break;\n\n    case 'SET_AGE':\n      state = _objectSpread({}, state, {\n        age: action.payload\n      });\n  }\n\n  return state;\n}; // Middleware \n\n\nconst myLogger = store => next => action => {\n  // console.log('store', store)\n  // console.log('next', next)\n  // console.log(\"Logged Action\", action)\n  next(action);\n};\n\nstore.subscribe(() => {// console.log('Store updated', store.getState())\n});\nstore.dispatch({\n  type: 'SET_AGE',\n  payload: 11\n});\nstore.dispatch({\n  type: 'ADD',\n  payload: 11\n});\nstore.dispatch({\n  type: 'SUB',\n  payload: 1\n});\nstore.dispatch({\n  type: 'SET_NAME',\n  payload: 'Nandini Venkateshan'\n});\nrender(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/home/admi/work/cra/src/index.js"],"names":["React","render","App","createStore","combineReducers","applyMiddleware","logger","Provider","mathReducer","state","val","array","action","type","payload","userReducer","name","age","myLogger","store","next","subscribe","dispatch","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,QAAR,QAAuB,aAAvB;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAC3BC,EAAAA,GAAG,EAAE,GADsB;AAE3BC,EAAAA,KAAK,EAAE;AAFoB,CAAT,EAGjBC,MAHiB,KAGN;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACEJ,MAAAA,KAAK,qBAAQA,KAAR;AAAeC,QAAAA,GAAG,EAAED,KAAK,CAACC,GAAN,GAAYE,MAAM,CAACE;AAAvC,QAAL;AACA;;AACF,SAAK,KAAL;AACEL,MAAAA,KAAK,qBAAQA,KAAR;AAAeE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAtB,QAAL;AALJ;;AAOA,SAAOL,KAAP;AACD,CAZD;;AAcA,MAAMM,WAAW,GAAG,CAACN,KAAK,GAAG;AAC3BO,EAAAA,IAAI,EAAE,SADqB;AAE3BC,EAAAA,GAAG,EAAE;AAFsB,CAAT,EAGjBL,MAHiB,KAGN;AACZ,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACEJ,MAAAA,KAAK,qBAAQA,KAAR;AAAeO,QAAAA,IAAI,EAAEJ,MAAM,CAACE;AAA5B,QAAL;AACA;;AACF,SAAK,SAAL;AACEL,MAAAA,KAAK,qBAAQA,KAAR;AAAeQ,QAAAA,GAAG,EAAEL,MAAM,CAACE;AAA3B,QAAL;AALJ;;AAOA,SAAOL,KAAP;AACD,CAZD,C,CAaA;;;AAEA,MAAMS,QAAQ,GAAIC,KAAD,IAAYC,IAAD,IAAWR,MAAD,IAAY;AAChD;AACA;AACA;AACAQ,EAAAA,IAAI,CAACR,MAAD,CAAJ;AACD,CALD;;AASAO,KAAK,CAACE,SAAN,CAAgB,MAAM,CACrB;AACA,CAFD;AAIAF,KAAK,CAACG,QAAN,CAAe;AACbT,EAAAA,IAAI,EAAE,SADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAIAK,KAAK,CAACG,QAAN,CAAe;AACbT,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAK,KAAK,CAACG,QAAN,CAAe;AACbT,EAAAA,IAAI,EAAE,KADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAK,KAAK,CAACG,QAAN,CAAe;AACbT,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,OAAO,EAAE;AAFI,CAAf;AAKAb,MAAM,CACJ,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEkB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADI,EAKLI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALK,CAAN","sourcesContent":["import React from 'react'\nimport {render} from 'react-dom'\nimport './index.css'\nimport App from './app/container/App'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport logger from 'redux-logger'\nimport {Provider} from 'react-redux'\n\nconst mathReducer = (state = {\n  val: 100,\n  array: []\n}, action) => {\n  switch (action.type) {\n    case 'ADD' :\n      state = { ...state, val: state.val + action.payload }\n      break\n    case 'SUB' :\n      state = { ...state, array: [...state.array, action.payload] }\n  }\n  return state\n}\n\nconst userReducer = (state = {\n  name: 'Nandini',\n  age: 24\n}, action) => {\n  switch (action.type) {\n    case 'SET_NAME' :\n      state = { ...state, name: action.payload }\n      break\n    case 'SET_AGE' :\n      state = { ...state, age: action.payload }\n  }\n  return state\n}\n// Middleware \n\nconst myLogger = (store) => (next) => (action) => {\n  // console.log('store', store)\n  // console.log('next', next)\n  // console.log(\"Logged Action\", action)\n  next(action)\n}\n\n\n\nstore.subscribe(() => {\n // console.log('Store updated', store.getState())\n})\n\nstore.dispatch({\n  type: 'SET_AGE',\n  payload: 11\n})\nstore.dispatch({\n  type: 'ADD',\n  payload: 11\n})\n\nstore.dispatch({\n  type: 'SUB',\n  payload: 1\n})\n\nstore.dispatch({\n  type: 'SET_NAME',\n  payload: 'Nandini Venkateshan'\n})\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>\n,\n document.getElementById('root'))\n"]},"metadata":{},"sourceType":"module"}